INPUT float->UV 'Curve';

INPUT int 'Number of segments'; /// The higher the number the smoother the curve, but the slower it will be to render.
INPUT float 'Thickness';

INPUT bool 'Trail';

// https://iquilezles.org/articles/distfunctions2d/
float sdSegment(vec2 p, vec2 a, vec2 b, float thickness)
{
    vec2  pa = p - a, ba = b - a;
    float h = saturate(dot(pa, ba) / dot(ba, ba));
    return length(pa - ba * h) - thickness;
}

SignedDistance main(UV uv)
{
    float dist_to_curve = FLT_MAX;
    vec2  previous_position; // Will be filled during the first iteration of the loop

    for (int i = 0; i <= 'Number of segments'; i++)
    {
        float t = i / float('Number of segments'); // 0 to 1

        vec2 current_position = 'Curve'(t);
        if (i != 0) // During the first iteration we don't yet have two points to draw a segment between
        {
            float thickness = 'Trail' ? 'Thickness' * t : 'Thickness';
            float segment   = sdSegment(uv, previous_position, current_position, thickness);
            dist_to_curve   = min(dist_to_curve, segment);
        }

        previous_position = current_position;
    }

    return dist_to_curve;
}