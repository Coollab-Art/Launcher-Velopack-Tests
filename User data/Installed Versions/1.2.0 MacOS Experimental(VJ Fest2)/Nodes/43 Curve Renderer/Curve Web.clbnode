INPUT float->UV 'Curve';

INPUT int 'Number of segments';
INPUT float 'Thickness';

INPUT float 'Segments offset';

// https://iquilezles.org/articles/distfunctions2d/
float sdSegment(vec2 p, vec2 a, vec2 b, float thickness)
{
    vec2  pa = p - a, ba = b - a;
    float h = saturate(dot(pa, ba) / dot(ba, ba));
    return length(pa - ba * h) - thickness;
}

SignedDistance main(UV uv)
{
    float dist_to_curve = FLT_MAX;

    for (int i = 0; i <= 'Number of segments'; i++)
    {
        float t = float(i) / float('Number of segments'); // 0 to 1

        vec2  pos1    = 'Curve'(t);
        vec2  pos2    = 'Curve'(t + 'Segments offset');
        float segment = sdSegment(uv, pos1, pos2, 'Thickness');
        dist_to_curve = min(dist_to_curve, segment);
    }

    return dist_to_curve;
}