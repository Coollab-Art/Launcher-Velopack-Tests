// https://iquilezles.org/articles/distfunctions2d/

INPUT float 'Size';
INPUT int 'Nb of Branches';
INPUT float 'Pointiness';
INPUT float 'Roundness';
INPUT Point2D 'Center';

SignedDistance main(UV uv)
{
    uv -= 'Center';
    float original_inner_radius = 'Size' / cos(PI / float('Nb of Branches'));

    float an = PI / float('Nb of Branches');

    float thickness = mix(2.0, float('Nb of Branches'), 'Pointiness');

    float inner_radius = mix(0.0, original_inner_radius, 'Roundness');

    float size = (original_inner_radius - inner_radius);

    float en = PI / thickness;

    vec2 acs = vec2(cos(an), sin(an));
    vec2 ecs = vec2(cos(en), sin(en));

    // Symmetry
    float bn = mod(atan(uv.x, uv.y), 2.0 * an) - an;
    uv       = length(uv) * vec2(cos(bn), abs(sin(bn)));

    uv -= size * acs;

    uv += ecs * clamp(-dot(uv, ecs), 0.0, size * acs.y / ecs.y);

    return length(uv) * sign(uv.x) - inner_radius;
}
